{
  "workflow": {
    "unique_name": "definition_workflow_0195RI1NQKRIL0jhENEia4CjPIvTsHgS7g9",
    "name": "Two different event type same workflow",
    "title": "Two different event type same workflow",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "tabletype_0197MOXX7KUOH4iDF5C9aSmSdZbQ9iqZyPA",
        "properties": {
          "value": [
            {
              "column_data": {
                "value": 1
              }
            },
            {
              "column_data": {
                "value": 2
              }
            },
            {
              "column_data": {
                "value": 3
              }
            },
            {
              "column_data": {
                "value": 4
              }
            }
          ],
          "scope": "local",
          "name": "local_Int_Table",
          "type": "datatype.table",
          "is_required": false
        },
        "unique_name": "variable_workflow_0197MPEUPQ63J3p00X2Zq9XBH2qtcP1u3vS",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 1,
          "scope": "input",
          "name": "Integer",
          "type": "datatype.integer",
          "is_required": false
        },
        "unique_name": "variable_workflow_0195RQEGCGZDB7YgwcnGW8569NKztNToenH",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "tabletype_0195WA7NGFOHD1HukFUE73edySJdnRq5OBI",
        "properties": {
          "value": [
            {
              "column_data": {
                "Number": 1
              }
            },
            {
              "column_data": {
                "Number": 2
              }
            },
            {
              "column_data": {
                "Number": 3
              }
            },
            {
              "column_data": {
                "Number": 4
              }
            }
          ],
          "scope": "local",
          "name": "Localtable",
          "type": "datatype.table",
          "is_required": false
        },
        "unique_name": "variable_workflow_0195WAX9NDLGA5nvS5nzmCESDax7dMNXk1J",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "description": "test",
      "display_name": "Two different event type same workflow",
      "runtime_user": {
        "override_target_runtime_user": false,
        "specify_on_workflow_start": false,
        "target_default": true
      },
      "target": {
        "execute_on_target_group": false,
        "execute_on_workflow_target": false,
        "no_target": true,
        "specify_on_workflow_start": false
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_0195WB3TO5N4579RgHrgTCjBlqbio8Z1QhZ",
        "name": "For Each",
        "title": "For Each",
        "type": "logic.for_each",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "For Each",
          "skip_execution": true,
          "source_array": "$workflow.definition_workflow_0195RI1NQKRIL0jhENEia4CjPIvTsHgS7g9.local.variable_workflow_0195WAX9NDLGA5nvS5nzmCESDax7dMNXk1J$"
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_0195RRGD5MBKS5kMWwhfMSPC0TsmPNKk33T",
            "name": "Wait For Event",
            "title": "Wait For Event",
            "type": "task.wait_for_event",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Wait For Event",
              "event_info": {
                "add_event": false,
                "existing_event_info": {
                  "event_id": "$global.variable_0195S8R9OWRY60ULxmqmsVePPZr4Y9ovf56.global.variable_0195S8R9OWRY60ULxmqmsVePPZr4Y9ovf56$",
                  "override_event_criteria": false
                },
                "use_existing_event": true
              },
              "event_type": "amqp.event",
              "skip_execution": false
            },
            "object_type": "definition_activity"
          }
        ]
      },
      {
        "unique_name": "definition_activity_0195RJ0LRMORS2SDcHHDH2JXcrpwashoAJw",
        "name": "Condition Block",
        "title": "Condition Block",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Condition Block",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_0195RJ0ONBMHO1Zsd6bl4fSL5vcvo1Tocpn",
            "name": "Condition Branch",
            "title": "Condition Branch",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_0195RI1NQKRIL0jhENEia4CjPIvTsHgS7g9.input.variable_workflow_0195RQEGCGZDB7YgwcnGW8569NKztNToenH$",
                "operator": "eq",
                "right_operand": 1
              },
              "continue_on_failure": false,
              "display_name": "Condition Branch",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_0195RIGR2T79H6ExBHFZ4u3Kgmj9xG3xCC9",
                "name": "Wait For Event",
                "title": "Wait For Event",
                "type": "task.wait_for_event",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": true,
                  "display_name": "Wait For Event",
                  "event_info": {
                    "existing_event_info": {
                      "event_id": "$global.variable_0192E0GN8KV631FyhzX5KuTxeqetDtpw7mM.global.variable_0192E0GN8KV631FyhzX5KuTxeqetDtpw7mM$"
                    },
                    "use_existing_event": true
                  },
                  "event_type": "kafka.event",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_0195RJ0PN9B403PoX5uzCc61hzkSWOeVYjL",
            "name": "Condition Branch",
            "title": "Condition Branch",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_0195RI1NQKRIL0jhENEia4CjPIvTsHgS7g9.input.variable_workflow_0195RQEGCGZDB7YgwcnGW8569NKztNToenH$",
                "operator": "ne",
                "right_operand": 1
              },
              "continue_on_failure": false,
              "display_name": "Condition Branch",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_0195XHU7BKWGV3lfG9wd8la4pqtKLrhBjPL",
                "name": "While Loop",
                "title": "While Loop",
                "type": "logic.while",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "While Loop",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_0195XHUQ15UBM1tlhKNhIquKwiym3dWsVj7",
                    "name": "Condition Branch",
                    "title": "Condition Branch",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_0195RI1NQKRIL0jhENEia4CjPIvTsHgS7g9.local.variable_workflow_0197MPEUPQ63J3p00X2Zq9XBH2qtcP1u3vS[-1].value$",
                        "operator": "ne",
                        "right_operand": 4
                      },
                      "continue_on_failure": false,
                      "display_name": "Condition Branch",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_0195XKVN476Z72ZsLoGcveVbaFaEgEe5rh2",
                        "name": "Sleep",
                        "title": "Sleep",
                        "type": "core.sleep",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Sleep",
                          "skip_execution": false,
                          "sleep_interval": 1
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_0195SAMKVAGNH3e0RkpjLgtbLi2IESkOYER",
        "name": "Sleep",
        "title": "Sleep",
        "type": "core.sleep",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Sleep",
          "skip_execution": false,
          "sleep_interval": 2
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_0195VQJ1VAO6N5rvbmId6OMjPdJHj8C8eVI",
        "name": "Wait For Event",
        "title": "Wait For Event",
        "type": "task.wait_for_event",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "qewqeq",
          "display_name": "Wait For Event",
          "event_info": {
            "add_event": false,
            "existing_event_info": {
              "event_id": "$global.variable_0192E0GN8KV631FyhzX5KuTxeqetDtpw7mM.global.variable_0192E0GN8KV631FyhzX5KuTxeqetDtpw7mM$",
              "override_event_criteria": false
            },
            "use_existing_event": true
          },
          "event_type": "kafka.event",
          "skip_execution": false
        },
        "object_type": "definition_activity"
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  },
  "triggers": {
    "triggerevent_019BP60PX8CGY2zYFfUBWsI3ysOhT342NLX": {
      "workflow_id": "definition_workflow_0195RI1NQKRIL0jhENEia4CjPIvTsHgS7g9",
      "name": "Kafka",
      "title": "",
      "lowercase_name": "event.kafka",
      "type": "event",
      "base_type": "trigger",
      "ref_id": "event_0192CX4NUXADL4OjOGw5gjtSGExYOXsHfxu",
      "version": "1.0.0",
      "disabled": false,
      "unique_name": "triggerevent_019BP60PX8CGY2zYFfUBWsI3ysOhT342NLX",
      "object_type": "triggerevent"
    }
  },
  "events": {
    "event_0192CX4NUXADL4OjOGw5gjtSGExYOXsHfxu": {
      "name": "ExternalKafkaEvent",
      "title": "ExternalKafkaEvent",
      "type": "kafka.event",
      "base_type": "event",
      "object_type": "event",
      "target_id": "definition_target_0192CWMNJN4DU5o4t33JurRoTk8Bbld99hb",
      "version": "1.0.0",
      "properties": {
        "display_name": "ExternalKafkaEvent",
        "target_id": "definition_target_0192CWMNJN4DU5o4t33JurRoTk8Bbld99hb",
        "title": "ExternalKafkaEvent",
        "topic_name": "newday1212A"
      },
      "unique_name": "event_0192CX4NUXADL4OjOGw5gjtSGExYOXsHfxu"
    }
  },
  "targets": {
    "definition_target_0192CWMNJN4DU5o4t33JurRoTk8Bbld99hb": {
      "unique_name": "definition_target_0192CWMNJN4DU5o4t33JurRoTk8Bbld99hb",
      "name": "ExternalKafka",
      "title": "ExternalKafka",
      "type": "kafka.endpoint",
      "base_type": "target",
      "object_type": "definition_target",
      "properties": {
        "disable_certificate_validation": true,
        "display_name": "ExternalKafka",
        "host": "10.88.38.124",
        "no_runtime_user": true,
        "port": 9092,
        "ssl_enable": false
      }
    }
  },
  "variables": {
    "variable_0192E0GN8KV631FyhzX5KuTxeqetDtpw7mM": {
      "unique_name": "variable_0192E0GN8KV631FyhzX5KuTxeqetDtpw7mM",
      "properties": {
        "value": "0192CX4HZ4CN04W81vJcZtCL16ANPlNZZB7",
        "scope": "global",
        "name": "KafkaEventID",
        "type": "datatype.string",
        "is_required": false
      },
      "object_type": "variable"
    },
    "variable_0195S8R9OWRY60ULxmqmsVePPZr4Y9ovf56": {
      "unique_name": "variable_0195S8R9OWRY60ULxmqmsVePPZr4Y9ovf56",
      "properties": {
        "value": "0192D8VQYWRE03ZVxKVfHIEMUz0uIyWNtAk",
        "scope": "global",
        "name": "AMQP Event",
        "type": "datatype.string",
        "is_required": false
      },
      "object_type": "variable"
    }
  },
  "table_types": {
    "tabletype_0195WA7NGFOHD1HukFUE73edySJdnRq5OBI": {
      "unique_name": "tabletype_0195WA7NGFOHD1HukFUE73edySJdnRq5OBI",
      "data_type": "datatype.tabletype",
      "display_name": "GlobalGtable",
      "description": "test",
      "columns": [
        {
          "is_required": true,
          "maximum": 4,
          "minimum": 1,
          "name": "Number",
          "title": "Number",
          "type": "integer"
        }
      ],
      "base_type": "datatype",
      "object_type": "tabletype"
    },
    "tabletype_0197MOXX7KUOH4iDF5C9aSmSdZbQ9iqZyPA": {
      "unique_name": "tabletype_0197MOXX7KUOH4iDF5C9aSmSdZbQ9iqZyPA",
      "data_type": "datatype.tabletype",
      "display_name": "Local_IntegerTYpe",
      "columns": [
        {
          "name": "value",
          "title": "value",
          "type": "integer"
        }
      ],
      "base_type": "datatype",
      "object_type": "tabletype"
    }
  }
}